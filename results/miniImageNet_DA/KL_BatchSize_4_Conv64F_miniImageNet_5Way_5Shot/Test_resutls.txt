========================================== Start Test ==========================================

=> loading checkpoint './results/miniImageNet_FixBN_Final/KL_BatchSize_4_Conv64F_miniImageNet_5Way_5Shot/model_best.pth.tar'
=> loaded checkpoint './results/miniImageNet_FixBN_Final/KL_BatchSize_4_Conv64F_miniImageNet_5Way_5Shot/model_best.pth.tar' (epoch 44)
Namespace(adam=True, augment=True, basemodel='Conv64F', beta1=0.5, clamp_lower=-0.01, clamp_upper=0.01, cosine=False, cuda=True, current_epoch=49, data_name='miniImageNet', dataset_dir='/home/liwenbin/Datasets/miniImageNet--ravi', episodeSize=4, episode_test_num=1000, episode_train_num=10000, episode_val_num=3000, epochs=50, imageSize=84, lr=0.001, method_name='KL', mode='train', nc=3, neighbor_k=1, ngpu=1, outf='./results/miniImageNet_FixBN_Final/KL_BatchSize_4_Conv64F_miniImageNet_5Way_5Shot', print_freq=50, query_num=15, resume='', shot_num=5, start_epoch=0, testepisodeSize=4, way_num=5, workers=8)
FourLayer_64F(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): LeakyReLU(negative_slope=0.2, inplace=True)
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): LeakyReLU(negative_slope=0.2, inplace=True)
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): LeakyReLU(negative_slope=0.2, inplace=True)
    (11): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): LeakyReLU(negative_slope=0.2, inplace=True)
  )
  (classifier): KL_Metric()
)
==================== The 0-th round ====================
Test-(44): [50/250]	Time 0.637 (0.269)	Loss 0.600 (0.782)	Prec@1 78.667 (70.725)
Test-(44): [100/250]	Time 0.140 (0.243)	Loss 0.898 (0.779)	Prec@1 54.667 (70.993)
Test-(44): [150/250]	Time 0.131 (0.238)	Loss 0.896 (0.778)	Prec@1 68.000 (70.945)
Test-(44): [200/250]	Time 0.593 (0.236)	Loss 1.027 (0.772)	Prec@1 61.333 (71.163)
 * Prec@1 71.172 Best_prec1 71.760
Test accuracy: 71.171997 h: 0.512476 

==================== The 1-th round ====================
Test-(44): [50/250]	Time 0.433 (0.263)	Loss 0.909 (0.795)	Prec@1 64.000 (70.667)
Test-(44): [100/250]	Time 0.138 (0.243)	Loss 0.706 (0.785)	Prec@1 73.333 (70.848)
Test-(44): [150/250]	Time 0.137 (0.234)	Loss 0.678 (0.780)	Prec@1 73.333 (71.042)
Test-(44): [200/250]	Time 0.141 (0.235)	Loss 0.668 (0.780)	Prec@1 72.000 (70.993)
 * Prec@1 71.151 Best_prec1 71.760
Test accuracy: 71.150673 h: 0.494911 

==================== The 2-th round ====================
Test-(44): [50/250]	Time 0.139 (0.253)	Loss 0.637 (0.755)	Prec@1 76.000 (71.889)
Test-(44): [100/250]	Time 0.135 (0.238)	Loss 0.443 (0.770)	Prec@1 78.667 (71.271)
Test-(44): [150/250]	Time 0.134 (0.233)	Loss 0.489 (0.769)	Prec@1 81.333 (71.245)
Test-(44): [200/250]	Time 0.830 (0.233)	Loss 1.089 (0.761)	Prec@1 70.667 (71.524)
 * Prec@1 71.432 Best_prec1 71.760
Test accuracy: 71.431999 h: 0.513179 

==================== The 3-th round ====================
Test-(44): [50/250]	Time 0.133 (0.278)	Loss 0.907 (0.753)	Prec@1 65.333 (71.680)
Test-(44): [100/250]	Time 0.134 (0.253)	Loss 0.760 (0.758)	Prec@1 78.667 (71.884)
Test-(44): [150/250]	Time 0.130 (0.244)	Loss 0.910 (0.754)	Prec@1 66.667 (72.143)
Test-(44): [200/250]	Time 0.795 (0.240)	Loss 0.526 (0.754)	Prec@1 78.667 (72.163)
 * Prec@1 72.101 Best_prec1 71.760
Test accuracy: 72.101334 h: 0.488325 

==================== The 4-th round ====================
Test-(44): [50/250]	Time 0.136 (0.261)	Loss 0.530 (0.787)	Prec@1 78.667 (70.843)
Test-(44): [100/250]	Time 0.134 (0.244)	Loss 0.703 (0.763)	Prec@1 72.000 (71.617)
Test-(44): [150/250]	Time 0.138 (0.239)	Loss 0.532 (0.766)	Prec@1 76.000 (71.559)
Test-(44): [200/250]	Time 0.835 (0.237)	Loss 0.837 (0.763)	Prec@1 64.000 (71.725)
 * Prec@1 71.516 Best_prec1 71.760
Test accuracy: 71.515999 h: 0.506869 

Mean_accuracy: 71.474400 h: 0.503152
===================================== Test is END =====================================

