========================================== Start Test ==========================================

=> loading checkpoint './results/tieredImageNet_FixBN_Final/Wass_BatchSize_4_Conv64F_tieredImageNet_5Way_5Shot/model_best.pth.tar'
=> loaded checkpoint './results/tieredImageNet_FixBN_Final/Wass_BatchSize_4_Conv64F_tieredImageNet_5Way_5Shot/model_best.pth.tar' (epoch 49)
Namespace(adam=True, augment=False, basemodel='Conv64F', beta1=0.5, clamp_lower=-0.01, clamp_upper=0.01, cosine=False, cuda=True, current_epoch=49, data_name='tieredImageNet', dataset_dir='/home/liwenbin/Datasets/tiered_imagenet', episodeSize=4, episode_test_num=1000, episode_train_num=10000, episode_val_num=3000, epochs=50, imageSize=84, lr=0.001, method_name='Wass', mode='train', nc=3, neighbor_k=1, ngpu=1, outf='./results/tieredImageNet_FixBN_Final/Wass_BatchSize_4_Conv64F_tieredImageNet_5Way_5Shot', print_freq=50, query_num=15, resume='', shot_num=5, start_epoch=0, testepisodeSize=4, way_num=5, workers=8)
FourLayer_64F(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): LeakyReLU(negative_slope=0.2, inplace=True)
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): LeakyReLU(negative_slope=0.2, inplace=True)
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): LeakyReLU(negative_slope=0.2, inplace=True)
    (11): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): LeakyReLU(negative_slope=0.2, inplace=True)
  )
  (classifier): Wass_Metric()
)
==================== The 0-th round ====================
Test-(49): [50/250]	Time 0.039 (0.120)	Loss 0.603 (0.694)	Prec@1 77.333 (72.941)
Test-(49): [100/250]	Time 0.041 (0.112)	Loss 0.459 (0.695)	Prec@1 82.667 (72.871)
Test-(49): [150/250]	Time 0.038 (0.109)	Loss 0.808 (0.697)	Prec@1 66.667 (72.949)
Test-(49): [200/250]	Time 0.434 (0.110)	Loss 1.226 (0.696)	Prec@1 65.333 (73.114)
 * Prec@1 73.244 Best_prec1 70.647
Test accuracy: 73.244003 h: 0.558318 

==================== The 1-th round ====================
Test-(49): [50/250]	Time 0.038 (0.119)	Loss 0.688 (0.684)	Prec@1 74.667 (73.863)
Test-(49): [100/250]	Time 0.053 (0.111)	Loss 0.494 (0.669)	Prec@1 78.667 (74.244)
Test-(49): [150/250]	Time 0.038 (0.109)	Loss 0.677 (0.678)	Prec@1 73.333 (73.943)
Test-(49): [200/250]	Time 0.300 (0.109)	Loss 0.882 (0.680)	Prec@1 64.000 (73.784)
 * Prec@1 73.855 Best_prec1 70.647
Test accuracy: 73.854675 h: 0.537363 

==================== The 2-th round ====================
Test-(49): [50/250]	Time 0.039 (0.119)	Loss 0.931 (0.691)	Prec@1 64.000 (72.935)
Test-(49): [100/250]	Time 0.041 (0.111)	Loss 0.839 (0.693)	Prec@1 62.667 (72.983)
Test-(49): [150/250]	Time 0.038 (0.108)	Loss 0.843 (0.693)	Prec@1 64.000 (73.015)
Test-(49): [200/250]	Time 0.423 (0.108)	Loss 0.600 (0.688)	Prec@1 81.333 (73.315)
 * Prec@1 73.424 Best_prec1 70.647
Test accuracy: 73.424004 h: 0.595479 

==================== The 3-th round ====================
Test-(49): [50/250]	Time 0.040 (0.112)	Loss 0.605 (0.669)	Prec@1 77.333 (74.516)
Test-(49): [100/250]	Time 0.040 (0.100)	Loss 0.591 (0.673)	Prec@1 81.333 (74.297)
Test-(49): [150/250]	Time 0.038 (0.097)	Loss 0.623 (0.682)	Prec@1 74.667 (73.870)
Test-(49): [200/250]	Time 0.245 (0.096)	Loss 0.588 (0.680)	Prec@1 77.333 (73.915)
 * Prec@1 74.032 Best_prec1 70.647
Test accuracy: 74.031998 h: 0.563357 

==================== The 4-th round ====================
Test-(49): [50/250]	Time 0.043 (0.109)	Loss 0.839 (0.659)	Prec@1 68.000 (74.915)
Test-(49): [100/250]	Time 0.037 (0.099)	Loss 0.546 (0.671)	Prec@1 84.000 (74.208)
Test-(49): [150/250]	Time 0.037 (0.095)	Loss 0.614 (0.675)	Prec@1 81.333 (73.978)
Test-(49): [200/250]	Time 0.457 (0.096)	Loss 0.759 (0.679)	Prec@1 70.667 (73.846)
 * Prec@1 73.656 Best_prec1 70.647
Test accuracy: 73.655998 h: 0.586271 

Mean_accuracy: 73.642136 h: 0.568158
===================================== Test is END =====================================

